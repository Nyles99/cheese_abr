from aiogram import F, types, Router
from aiogram.filters import CommandStart, Command
from aiogram.utils.formatting import as_list, as_marked_section, Bold

from sqlalchemy.ext.asyncio import AsyncSession
from database.orm_query import orm_get_products

from filters.chat_types import ChatTypeFilter

from kbds.reply import get_keyboard


user_private_router = Router()
user_private_router.message.filter(ChatTypeFilter(['private']))


@user_private_router.message(CommandStart())
async def start_cmd(message: types.Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç, —è –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫",
        reply_markup=get_keyboard(
            "–ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç",
            "–û –Ω–∞—Å",
            "–í–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã",
            "–î–æ—Å—Ç–∞–≤–∫–∞",
            placeholder="–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
            sizes=(2, 2)
        ),
    )

@user_private_router.message(F.text.lower() == "–∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç")    
@user_private_router.message(Command('menu'))
async def menu_cmd(message: types.Message, session: AsyncSession):
    for product in await orm_get_products(session):
        await message.answer_photo(
            product.image,
            caption=f"<strong>{product.name}\
                    </strong>\n{product.description}\n–°—Ç–æ–∏–º–æ—Å—Ç—å: {product.price}"
        )
    await message.answer("–í–æ—Ç –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç:")
    
@user_private_router.message(F.text.lower() == '–æ –Ω–∞—Å')    
@user_private_router.message(Command('about'))
async def about_cmd(message: types.Message):
    await message.answer("–û –Ω–∞—Å:")


@user_private_router.message(F.text.lower() == '–≤–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã')
@user_private_router.message(Command('payment'))
async def payment_cmd(message: types.Message):
    
    text = as_marked_section(
            Bold("–í–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã:"),
            "–ù–∞–ª–∏—á–Ω—ã–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏",
            "–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É",
            marker="üí∏"
        )
    await message.answer(text.as_html())
    
@user_private_router.message(F.text.lower() == '–¥–æ—Å—Ç–∞–≤–∫–∞')    
@user_private_router.message(Command('shipping'))
async def shipping_cmd(message: types.Message):
    await message.answer("üöó –ú—ã —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –¥–æ—Å—Ç–∞–≤–∏–º –í–∞–º –Ω–∞—à—É –ø—Ä–æ–¥—É–∫—Ü–∏—é –≤ —É–¥–æ–±–Ω–æ–µ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è. \n –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –ö–æ—Å—Ç—Ä–æ–º–µ –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –æ—Ç –ª—é–±–æ–π —Å—É–º–º—ã. ")
    

@user_private_router.message(F.contact)
async def get_contact(message: types.Message):
    await message.answer(f"–Ω–æ–º–µ—Ä –ø–æ–ª—É—á–µ–Ω")
    await message.answer(str(message.contact))
    
    
@user_private_router.message(F.location)
async def get_location(message: types.Message):
    await message.answer(f"–ª–æ–∫–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞")
    await message.answer(str(message.location))